{{/*
Generate certificates
We only autogenerate certs if user did not chose their own secret.
We only autogenerate certs if the cert is not yet generated. This way we keep the secrets between Helm upgrades.
*/}}

{{- $caBundle := .Values.webhookCaBundle }}

{{- if eq .Values.webhookSecretName "" -}}
{{- $cert := "" }}
{{- $key := "" }}
{{- $secretName := "kube-shuffle-sharder-cert" }}

{{- $secret := (lookup "v1" "Secret" .Release.Namespace $secretName) -}}
{{- if $secret -}}
  {{- $cert = index $secret.data "tls.crt" -}}
  {{- $key = index $secret.data "tls.key" -}}
  {{- $caBundle = index $secret.data "ca.crt" -}}
{{- else -}}
  {{- $commonName := "kube-shuffle-sharder" -}}
  {{- $altNames := list (printf "%s.%s" $commonName .Release.Namespace) (printf "%s.%s.svc" $commonName .Release.Namespace) -}}
  {{- $certTTL := 3650 -}}
  {{- $ca := genCA "kube-shuffle-sharder-ca" $certTTL -}}

  {{- $genCert := genSignedCert $commonName nil $altNames $certTTL $ca -}}
  {{- $cert = $genCert.Cert | b64enc -}}
  {{- $key = $genCert.Key | b64enc -}}
  {{ $caBundle = $ca.Cert | b64enc }}
{{- end -}}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "commonLabels" . | nindent 4 }}
data:
  tls.crt: {{ $cert }}
  tls.key: {{ $key }}
  ca.crt: {{ $caBundle }}
{{- end }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutating-webhook-configuration
  labels: {{ include "commonLabels" . | nindent 4 }}
webhooks:
- name: namespace-injector.kube-shuffle-sharder.io
  namespaceSelector:
    matchLabels:
      kube-shuffle-sharder.io/affinity-injection: enabled
  admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: {{ $caBundle }}
    service:
      name: kube-shuffle-sharder
      namespace: {{ .Release.Namespace }}
      path: /mutate-v1-pod
  failurePolicy: Fail
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
- name: pod-injector.kube-shuffle-sharder.io
  objectSelector:
    matchLabels:
      kube-shuffle-sharder.io/affinity-injection: enabled
  admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: {{ $caBundle }}
    service:
      name: kube-shuffle-sharder
      namespace: {{ .Release.Namespace }}
      path: /mutate-v1-pod
  failurePolicy: Fail
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validating-webhook-configuration
  labels: {{ include "commonLabels" . | nindent 4 }}
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: {{ $caBundle }}
    service:
      name: kube-shuffle-sharder
      namespace: {{ .Release.Namespace }}
      path: /validate-kube-shuffle-sharder-io-v1-shuffleshard
  failurePolicy: Fail
  name: vshuffleshard.kb.io
  rules:
  - apiGroups:
    - kube-shuffle-sharder.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - shuffleshards
  sideEffects: None
